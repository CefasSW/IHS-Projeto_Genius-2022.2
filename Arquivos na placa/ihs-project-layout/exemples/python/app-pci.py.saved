<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE abiword PUBLIC "-//ABISOURCE//DTD AWML 1.0 Strict//EN" "http://www.abisource.com/awml.dtd">
<abiword template="false" xmlns:ct="http://www.abisource.com/changetracking.dtd" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:math="http://www.w3.org/1998/Math/MathML" xid-max="60" xmlns:dc="http://purl.org/dc/elements/1.1/" fileformat="1.1" xmlns:svg="http://www.w3.org/2000/svg" xmlns:awml="http://www.abisource.com/awml.dtd" xmlns="http://www.abisource.com/awml.dtd" xmlns:xlink="http://www.w3.org/1999/xlink" version="3.0.4" xml:space="preserve" props="dom-dir:ltr; document-footnote-restart-section:0; document-endnote-type:numeric; document-endnote-place-enddoc:1; document-endnote-initial:1; lang:pt-BR; document-endnote-restart-section:0; document-footnote-restart-page:0; document-footnote-type:numeric; document-footnote-initial:1; document-endnote-place-endsection:0">
<!-- ======================================================================== -->
<!-- This file is an AbiWord document.                                        -->
<!-- AbiWord is a free, Open Source word processor.                           -->
<!-- More information about AbiWord is available at http://www.abisource.com/ -->
<!-- You should not edit this file by hand.                                   -->
<!-- ======================================================================== -->

<metadata>
<m key="abiword.generator">AbiWord</m>
<m key="dc.format">application/x-abiword</m>
</metadata>
<rdf>
</rdf>
<styles>
<s type="P" name="Normal" basedon="" followedby="Current Settings" props="font-family:Liberation Serif; margin-top:0pt; font-variant:normal; margin-left:0pt; text-indent:0in; widows:2; font-style:normal; font-weight:normal; text-decoration:none; color:000000; line-height:1.0; text-align:left; margin-bottom:0pt; text-position:normal; margin-right:0pt; bgcolor:transparent; font-size:12pt; font-stretch:normal"/>
</styles>
<pagesize pagetype="A4" orientation="portrait" width="210.000000" height="297.000000" units="mm" page-scale="1.000000"/>
<section xid="1">
<p style="Normal" xid="2" props="text-align:left; dom-dir:ltr">#!/usr/bin/python3</p>
<p style="Normal" xid="3"><c></c></p>
<p style="Normal" xid="4" props="text-align:left; dom-dir:ltr">import os, sys</p>
<p style="Normal" xid="5" props="text-align:left; dom-dir:ltr">from fcntl import ioctl</p>
<p style="Normal" xid="6"><c></c></p>
<p style="Normal" xid="7" props="text-align:left; dom-dir:ltr"># ioctl commands defined at the pci driver</p>
<p style="Normal" xid="8" props="text-align:left; dom-dir:ltr">RD_SWITCHES   = 24929</p>
<p style="Normal" xid="9" props="text-align:left; dom-dir:ltr">RD_PBUTTONS   = 24930</p>
<p style="Normal" xid="10" props="text-align:left; dom-dir:ltr">WR_L_DISPLAY  = 24931</p>
<p style="Normal" xid="11" props="text-align:left; dom-dir:ltr">WR_R_DISPLAY  = 24932</p>
<p style="Normal" xid="12" props="text-align:left; dom-dir:ltr">WR_RED_LEDS   = 24933</p>
<p style="Normal" xid="13" props="text-align:left; dom-dir:ltr">WR_GREEN_LEDS = 24934</p>
<p style="Normal" xid="14"><c></c></p>
<p style="Normal" xid="15" props="text-align:left; dom-dir:ltr">def fixTo6(str1):</p>
<p style="Normal" xid="16" props="text-align:left; dom-dir:ltr">    if(len(str1) == 5):</p>
<p style="Normal" xid="17" props="text-align:left; dom-dir:ltr">        str1 = str1[:2] + "0" + str1[2:]</p>
<p style="Normal" xid="18" props="text-align:left; dom-dir:ltr">    if(len(str1) == 4):</p>
<p style="Normal" xid="19" props="text-align:left; dom-dir:ltr">        str1 = str1[:2] + "00" + str1[2:]</p>
<p style="Normal" xid="20" props="text-align:left; dom-dir:ltr">    if(len(str1) == 3):</p>
<p style="Normal" xid="21" props="text-align:left; dom-dir:ltr">        str1 = str1[:2] + "000" + str1[2:]    </p>
<p style="Normal" xid="22" props="text-align:left; dom-dir:ltr">    return str1</p>
<p style="Normal" xid="23"><c></c></p>
<p style="Normal" xid="24" props="text-align:left; dom-dir:ltr">def main():</p>
<p style="Normal" xid="25" props="text-align:left; dom-dir:ltr">    if len(sys.argv) &lt; 2:</p>
<p style="Normal" xid="26" props="text-align:left; dom-dir:ltr">        print("Error: expected more command line arguments")</p>
<p style="Normal" xid="27" props="text-align:left; dom-dir:ltr">        print("Syntax: %s &lt;/dev/device_file&gt;"%sys.argv[0])</p>
<p style="Normal" xid="28" props="text-align:left; dom-dir:ltr">        exit(1)</p>
<p style="Normal" xid="29"><c></c></p>
<p style="Normal" xid="30" props="text-align:left; dom-dir:ltr">    fd = os.open(sys.argv[1], os.O_RDWR)</p>
<p style="Normal" xid="31"><c></c></p>
<p style="Normal" xid="32" props="text-align:left; dom-dir:ltr">    # data to write</p>
<p style="Normal" xid="33" props="text-align:left; dom-dir:ltr">    data = 0x40404040;</p>
<p style="Normal" xid="34" props="text-align:left; dom-dir:ltr">    ioctl(fd, WR_R_DISPLAY)</p>
<p style="Normal" xid="35" props="text-align:left; dom-dir:ltr">    retval = os.write(fd, data.to_bytes(4, 'little'))</p>
<p style="Normal" xid="36" props="text-align:left; dom-dir:ltr">    print("wrote %d bytes"%retval)</p>
<p style="Normal" xid="37"><c></c></p>
<p style="Normal" xid="38" props="text-align:left; dom-dir:ltr">    # data to write</p>
<p style="Normal" xid="39" props="text-align:left; dom-dir:ltr">    data = 0x40404040;</p>
<p style="Normal" xid="40" props="text-align:left; dom-dir:ltr">    ioctl(fd, WR_L_DISPLAY)</p>
<p style="Normal" xid="41" props="text-align:left; dom-dir:ltr">    retval = os.write(fd, data.to_bytes(4, 'little'))</p>
<p style="Normal" xid="42" props="text-align:left; dom-dir:ltr">    print("wrote %d bytes"%retval)</p>
<p style="Normal" xid="43"><c></c></p>
<p style="Normal" xid="44" props="text-align:left; dom-dir:ltr">    ioctl(fd, RD_PBUTTONS)</p>
<p style="Normal" xid="45" props="text-align:left; dom-dir:ltr">    red = os.read(fd, 4); # read 4 bytes and store in red var</p>
<p style="Normal" xid="46" props="text-align:left; dom-dir:ltr">    print("red 0x%X"%int.from_bytes(red, 'little'))</p>
<p style="Normal" xid="47" props="text-align:left; dom-dir:ltr">    val = fixTo6(bin(red[0]))</p>
<p style="Normal" xid="48" props="text-align:left; dom-dir:ltr">    print(val)</p>
<p style="Normal" xid="49" props="text-align:left; dom-dir:ltr">    print(val[2])</p>
<p style="Normal" xid="50"><c></c></p>
<p style="Normal" xid="51" props="text-align:left; dom-dir:ltr">    ioctl(fd, RD_SWITCHES)</p>
<p style="Normal" xid="52" props="text-align:left; dom-dir:ltr">    red = os.read(fd, 4); # read 4 bytes and store in red var</p>
<p style="Normal" xid="53" props="text-align:left; dom-dir:ltr">    print("red 0x%X"%int.from_bytes(red, 'little'))</p>
<p style="Normal" xid="54"><c></c></p>
<p style="Normal" xid="55" props="text-align:left; dom-dir:ltr">    os.close(fd)</p>
<p style="Normal" xid="56"><c></c></p>
<p style="Normal" xid="57" props="text-align:left; dom-dir:ltr">if __name__ == '__main__':</p>
<p style="Normal" xid="58" props="text-align:left; dom-dir:ltr">    main()</p>
<p style="Normal" xid="59"><c></c></p>
<p style="Normal" xid="60"></p>
</section>
</abiword>
